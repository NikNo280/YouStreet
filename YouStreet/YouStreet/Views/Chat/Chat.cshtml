@model YouStreet.ViewModels.MessageViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>SignalR Chat - Metanit.com</title>
</head>
<body>
    <form method="post" asp-controller="Chat" asp-action="Chat">
        <input type="text" id="receiver" value="@Model.ReaderName" disabled>
        <input asp-for="Text" type="text" id="message" placeholder="Введите сообщение" />
        <input type="submit" id="sendBtn" value="Отправить" />
    </form>
    <div id="chatroom"></div>
    @foreach(var userMessage in Model.UserMessages)
    {
        <h4>@userMessage.SenderName : @userMessage.Text</h4>
    }
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/Chat")
            .build();

        hubConnection.on("Receive", function (message, userName) {

            // создаем элемент <b> для имени пользователя
            let userNameElem = document.createElement("b");
            userNameElem.appendChild(document.createTextNode(userName + ": "));

            // создает элемент <p> для сообщения пользователя
            let elem = document.createElement("p");
            elem.appendChild(userNameElem);
            elem.appendChild(document.createTextNode(message));

            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);

        });

        // отправка сообщения на сервер
        // отправка сообщения на сервер
        document.getElementById("sendBtn").addEventListener("click", function (e) {
            let message = document.getElementById("message").value;
            let to = document.getElementById("receiver").value;
            hubConnection.invoke("Send", message, to);
        });

        hubConnection.start();
    </script>
</body>
</html>